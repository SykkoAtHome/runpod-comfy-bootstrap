#!/usr/bin/env bash
set -euo pipefail

WORKDIR="${WORKDIR:-/workspace}"

# locate or create ComfyUI directory
CANDIDATES=("${WORKDIR}/ComfyUI" "/workspace/ComfyUI" "/opt/ComfyUI")
COMFY_DIR=""
for c in "${CANDIDATES[@]}"; do
  if [ -d "$c" ]; then COMFY_DIR="$c"; break; fi
done
[ -z "$COMFY_DIR" ] && COMFY_DIR="${WORKDIR}/ComfyUI" && mkdir -p "${COMFY_DIR}"

echo "[workspace] COMFY_DIR = ${COMFY_DIR}"

# persistent directories
mkdir -p "${WORKDIR}/input" "${WORKDIR}/output" "${WORKDIR}/workflows" "${WORKDIR}/logs" "${WORKDIR}/models"

# copy model directory structure
if [ -d "${COMFY_DIR}/models" ]; then
  echo "[workspace] copying model directory structure"
  if command -v rsync >/dev/null 2>&1; then
    rsync -a -f "+ */" -f "- *" "${COMFY_DIR}/models/" "${WORKDIR}/models/" || true
  else
    while IFS= read -r -d '' d; do
      rel="${d#"${COMFY_DIR}/models/"}"
      mkdir -p "${WORKDIR}/models/${rel}"
    done < <(find "${COMFY_DIR}/models" -type d -print0 2>/dev/null || true)
  fi

  # move existing files
  while IFS= read -r -d '' f; do
    rel="${f#"${COMFY_DIR}/models/"}"
    dest="${WORKDIR}/models/${rel}"
    mkdir -p "$(dirname "$dest")"
    if [ -e "$dest" ]; then
      echo "[workspace] skip existing: ${dest}"
    else
      echo "[workspace] move: ${rel}"
      mv "$f" "$dest" || true
    fi
  done < <(find "${COMFY_DIR}/models" -type f -print0 2>/dev/null || true)

  # replace directories with symlinks
  while IFS= read -r -d '' d; do
    rel="${d#"${COMFY_DIR}/models/"}"
    [ -z "$rel" ] && continue
    mkdir -p "${WORKDIR}/models/${rel}"
    ln -sfn "${WORKDIR}/models/${rel}" "${COMFY_DIR}/models/${rel}"
  done < <(find "${COMFY_DIR}/models" -maxdepth 1 -mindepth 1 -type d -print0 2>/dev/null || true)
else
  mkdir -p "${COMFY_DIR}/models"
  ln -sfn "${WORKDIR}/models" "${COMFY_DIR}/models"
fi

# link input/output for convenience
ln -sfn "${WORKDIR}/input"  "${COMFY_DIR}/input"
ln -sfn "${WORKDIR}/output" "${COMFY_DIR}/output"

# generate extra_model_paths.yaml
YAML="${COMFY_DIR}/extra_model_paths.yaml"
cat > "$YAML" <<'EOF2'
# Auto-generated by workspace module
comfyui:
  base_path: /workspace/
  is_default: true
  checkpoints: models/checkpoints/
  clip: models/clip/
  clip_vision: models/clip_vision/
  diffusion_models: |
    models/diffusion_models
    models/unet
  vae: models/vae/
  loras: models/loras/
  text_encoders: models/text_encoders/
  controlnet: models/controlnet/
  upscale_models: models/upscale_models/
  embeddings: models/embeddings/
EOF2

echo "[workspace] wrote ${YAML}"
echo "[workspace] done."

